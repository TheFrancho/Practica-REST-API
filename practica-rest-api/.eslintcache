[{"C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\index.js":"1","C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\App.js":"2","C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Grafica.jsx":"3","C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Seleccion.jsx":"4","C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Chart.jsx":"5"},{"size":811,"mtime":1607564540150,"results":"6","hashOfConfig":"7"},{"size":428,"mtime":1607572413707,"results":"8","hashOfConfig":"7"},{"size":4757,"mtime":1607578475272,"results":"9","hashOfConfig":"7"},{"size":2398,"mtime":1607576272243,"results":"10","hashOfConfig":"7"},{"size":1498,"mtime":1607572413722,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1kxeshy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\index.js",[],["24","25"],"C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\App.js",[],"C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Grafica.jsx",["26"],"C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Seleccion.jsx",["27","28"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ButtonBase, Grid, Paper } from \"@material-ui/core\";\r\nimport or from \"./images/or.png\";\r\nimport and from \"./images/and.png\";\r\nimport xor from \"./images/xor.png\";\r\nimport suma from \"./images/suma.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Seleccion() {\r\n\t// Metodo para manejar el \"historial\" del navegador y asi navegar entre vistas\r\n\tconst history = useHistory();\r\n\r\n\t// Metodo para pasar de una vista a otra dependiendo del boton que es clickeado\r\n\tconst enviar = (e) => {\r\n\t\thistory.push(`/grafica/${e.target.name}`);\r\n\t\t//history.push(`/${e.target.name}`);\r\n\t\tconsole.log(e.target.name);\r\n\t};\r\n\r\n\t// Constante de estilos de CSS\r\n\tconst brucss = quedelol();\r\n\r\n\t// Retornar HTML\r\n\treturn (\r\n\t\t<div className={brucss.principal}>\r\n\t\t\t{/* Barra superior donde esta el titulo de la pagina */}\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\tPr√°ctica REST-API - Red Neuronal\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t{/* Grupo de botones representando cada red neuronal */}\r\n\t\t\t<Grid className={brucss.grupoBotones}>\r\n\t\t\t\t{/* Red Neuronal para OR */}\r\n\t\t\t\t<ButtonBase className={brucss.image} onClick={enviar}>\r\n\t\t\t\t\t<img className={brucss.img} alt=\"Or\" src={or} name=\"OR\" />\r\n\t\t\t\t</ButtonBase>\r\n\r\n\t\t\t\t{/* Red Neuronal para AND */}\r\n\t\t\t\t<ButtonBase className={brucss.image} onClick={enviar}>\r\n\t\t\t\t\t<img className={brucss.img} alt=\"And\" src={and} name=\"AND\" />\r\n\t\t\t\t</ButtonBase>\r\n\r\n\t\t\t\t{/* Red Neuronal para XOR */}\r\n\t\t\t\t<ButtonBase className={brucss.image} onClick={enviar}>\r\n\t\t\t\t\t<img className={brucss.img} alt=\"Xor\" src={xor} name=\"XOR\" />\r\n\t\t\t\t</ButtonBase>\r\n\r\n\t\t\t\t{/* Red Neuronal para la suma de numeros */}\r\n\t\t\t\t<ButtonBase className={brucss.image} onClick={enviar}>\r\n\t\t\t\t\t<img className={brucss.img} alt=\"Suma\" src={suma} name=\"SUMA\" />\r\n\t\t\t\t</ButtonBase>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// Estilos de CSS\r\nconst quedelol = makeStyles((theme) => ({\r\n\tprincipal: {\r\n\t\tbackgroundColor: theme.palette.secondary,\r\n\t},\r\n\tgrupoBotones: {\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginTop: \"50px\",\r\n\t},\r\n\timage: {\r\n\t\tmargin: \"30px\",\r\n\t},\r\n}));\r\n\r\nexport default Seleccion;\r\n","C:\\Users\\villa\\Desktop\\practica_rest\\Practica-REST-API\\practica-rest-api\\src\\components\\Chart.jsx",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":59,"column":5,"nodeType":"35","endLine":59,"endColumn":7,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":6,"column":28,"nodeType":"39","messageId":"40","endLine":6,"endColumn":33},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'op'. Either include it or remove the dependency array.","ArrayExpression",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [op]",{"range":"47","text":"48"},[1916,1918],"[op]"]